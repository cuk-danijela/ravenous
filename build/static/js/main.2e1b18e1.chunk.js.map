{"version":3,"sources":["components/Loading/loading.gif","components/Business/Business.js","components/BusinessList/BusinessList.js","components/Loading/Loading.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","index.js","registerServiceWorker.js"],"names":["module","exports","Business","className","target","rel","href","this","props","business","siteUrl","src","imageSrc","alt","name","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","Loading","loadingImg","SearchBar","handleKeyPress","event","handleSearch","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSortByChange","sortByOptions","sortByOption","setState","value","searchYelp","loading","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","onKeyPress","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","url","address1","zip_code","categories","title","review_count","App","handleLoading","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error"],"mappings":"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","file":"static/js/main.2e1b18e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.609c4d3e.gif\";","import React from 'react';\nimport './Business.css';\nimport { MdLocationOn, MdLocationCity, MdLocationSearching } from \"react-icons/md\";\n\nclass Business extends React.Component {\n  render() {\n    return (\n      <div className=\"Business\">\n        <div className=\"image-container\">\n          <a target='_blank' rel=\"noopener\" href={this.props.business.siteUrl}><img src={this.props.business.imageSrc} alt={this.props.business.name} /></a>\n        </div>\n        <h2>{this.props.business.name}</h2>\n        <div className=\"Business-information\">\n          <div className=\"Business-address\">\n            <p><MdLocationOn /> {this.props.business.address}</p>\n            <p><MdLocationCity/> {this.props.business.city}</p>\n            <p><MdLocationSearching/> {`${this.props.business.state} | ${this.props.business.zipCode}`}</p>\n          </div>\n          <hr/>\n          <div className=\"Business-reviews\">\n            <h3>{this.props.business.category.toUpperCase()}</h3>\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\n\nimport Business from '../Business/Business';\n\nclass BusinessList extends React.Component {\n  render() {\n    return (\n      <div className=\"BusinessList\">\n          {\n            this.props.businesses.map(business => {\n              return <Business business={business} key={business.id} />\n            })\n          }\n      </div>\n    );\n  }\n}\n\nexport default BusinessList;","import React, { Component } from 'react';\r\nimport './Loading.css';\r\nimport loadingImg from './loading.gif';\r\n\r\nclass Loading extends Component {\r\n    render(){\r\n        return (\r\n            <div className='loadingContainer'>\r\n                <img src={loadingImg} className='loadingImg' alt='Loading' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n\r\n","import React from 'react';\nimport './SearchBar.css';\nimport loading from '../Loading/Loading';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    if (this.state.sortBy === sortByOption) {\n      return 'active';\n    }\n      return '';\n  }\n\n  handleSortByChange(sortByOption) {\n    this.setState({ sortBy: sortByOption});\n  }\n\n  handleTermChange(event) {\n    this.setState({ term: event.target.value });\n  }\n\n  handleLocationChange(event) {\n    this.setState({ location: event.target.value});\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n    this.props.loading();\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      this.handleSearch();\n    }\n  };\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n        key={sortByOptionValue}\n        onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>\n        {sortByOption}\n      </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n          <h1>ravenous</h1>\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Restaurants\" onChange={this.handleTermChange} onKeyPress={this.handleKeyPress} />\n          <input placeholder=\"Location\" onChange={this.handleLocationChange} onKeyPress={this.handleKeyPress} />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button className=\"button\" onClick={this.handleSearch}> Let's Go</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","const apiKey = '8BqGVv--ZgJgRjWfPGKhLc-v7ogxroXy2buDJrK81VFqNB3jcfMirERI8snbh14SO9_DDG1CLKMt3gni1WpZ6eI-CZZW-cR1BDvFOoAERqKUH_eU7aJVSDM5q4A5XnYx'; // Insert API key here.\n\nconst Yelp = {\n  search(term, location, sortBy) {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        // console.log(jsonResponse.businesses);\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          siteUrl: business.url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      }\n    });\n  }\n};\n\nexport default Yelp;\n","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\nimport Loading from '../../components/Loading/Loading';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n      loading: false\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n    this.handleLoading = this.handleLoading.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState({businesses: businesses});\n      this.handleLoading();\n    });\n  }\n\n  handleLoading(){\n    this.setState({ loading: !this.state.loading});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <SearchBar searchYelp={this.searchYelp} loading={this.handleLoading}/>\n        { !!this.state.loading && <Loading /> }\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}